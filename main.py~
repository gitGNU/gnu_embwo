#! /usr/bin/env python

#
#  Freedom Fighters of Might & Magic
#
#  Copyright 2014-2015 by it's authors. 
#
#  Some rights reserved. See COPYING, AUTHORS.
#  This file may be used under the terms of the GNU General Public
#  License version 3.0 as published by the Free Software Foundation
#  and appearing in the file COPYING included in the packaging of
#  this file.
#
#  This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
#  WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#



try:
   import sys
   import random
   import math
   import os
   import getopt
   import pygame
   import main_menu
   import config_menu
   import game_engine
   import utils
   import sounds
   import paths
   import gummworld2
   from gummworld2 import Engine, State, BasicMap, SubPixelSurface, View, Vec2d
   from gummworld2 import context, model, spatialhash, toolkit

   from socket import *
   from pygame.locals import *
except ImportError as err:
   print("couldn't load module. %s" % (err))
   sys.exit(2)

class app(object):

 def __init__(self,parameters):
    #sound
    self.gameSounds = sounds.gameSound()
    self.gameSounds.loadTracks()
    pygame.init();
    if(parameters['resolution'] == 'NULL'):
       parameters['resolution'] = (1024,768)
    if(parameters['strcaption'] == 'NULL'):
       parameters['strcaption'] = 'Freedom Fighters of Might & Magic'
    self.parameters = parameters


 def setDisplay(self):
    #self.screen =  pygame.display.set_mode(self.resolution,pygame.FULLSCREEN)
    self.screen =  pygame.display.set_mode(self.parameters['resolution'])
    self.caption = pygame.display.set_caption(self.parameters['strcaption'])
    self.parameters['caption'] = self.caption

 def setGameEngine(self):
     self.gameEngine = game_engine.gameEngine(self.parameters,self.gameSounds,self.screen)
 
 
 def run(self):
    ret = 1
    self.gameSounds.playmenu(True,1.0)
    while True:
       if(ret == -1):         
          self.gameSounds.playmenu(False,1.0)
          print("EXITING FMM!!")
          pygame.quit()
          sys.exit()	
       if(ret == 10):
          self.gameSounds.playmenu(False,1.0)
          print("LET'S PLAY FMM!!")  
          gummworld2.run(self.gameEngine)
          print('out of game!!')
          ret = 1
          self.gameSounds.playmenu(True,1.0)
       if(ret == 2):
          conf_menu = config_menu.config_menu(self.parameters)
          conf_menu.setScreen(self.screen,30)
          conf_menu.constructScene()
          ret = conf_menu.run()

       else:
          scr_menu = main_menu.main_menu(self.parameters)
          scr_menu.setScreen(self.screen,30)
          scr_menu.constructScene()
          ret = scr_menu.run() 
          	
	
		
	



#INTILIALIZATION
#old 1014,965
resolution = (1024,768)
version = '0.0.6 ALPHA'
strCaption = 'FFMM ' + version
tile_size=(30, 30) 
map_size=(100, 100)
minimap_pos = (600,100)
minimap_size = (120,120)
FPS = 70
NULL = 'NULL'

parameters = {'resolution' : resolution,'strcaption' : strCaption,'caption' : NULL,'tile_size' : tile_size,'map_size' : map_size, 'minimap_pos' : minimap_pos, 'minimap_size' : minimap_size, 'FPS' : FPS, 'version' : version , 'fullscreen' : False }

FFMM = app(parameters)


#DISPLAY
FFMM.setDisplay()

#set game engine
FFMM.setGameEngine()
#set game pgu interface


#GAME RUN!!
FFMM.run()

	





